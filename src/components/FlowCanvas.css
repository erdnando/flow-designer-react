.flow-canvas-wrapper {
  flex: 1;
  position: relative;
  background: #1a1e24;
  display: flex;
}

.actions-bar {
  position: absolute;
  top: 20px;
  right: 340px; /* 320px panel + 20px margin */
  z-index: 100;
  display: flex;
  flex-direction: row;
  gap: 6px;
  background: rgba(26, 30, 36, 0.9);
  padding: 6px;
  border-radius: 8px;
  border: 1px solid #333;
  transition: right 0.3s ease;
}

.actions-bar.actions-bar-shifted {
  right: 60px; /* Ajustar cuando el panel está colapsado */
}

.action-btn {
  color: #ffffff !important;
  border: 1px solid #444 !important;
  background: #2a2f36 !important;
  width: 34px;
  height: 34px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 4px;
  font-size: 14px;
  padding: 0 !important;
}

.action-separator {
  width: 1px;
  height: 24px;
  background-color: #444;
  margin: 5px 6px;
}

.clear-separator {
  margin-left: 10px;
}

.clear-btn {
  border-color: rgba(224, 67, 67, 0.5) !important;
  margin-right: 4px;
}

.clear-btn:hover {
  border-color: #e04343 !important;
  color: #e04343 !important;
  background: rgba(224, 67, 67, 0.1) !important;
}

.action-btn:hover {
  background: #333844 !important;
  color: #1890ff !important;
}

.reactflow-wrapper {
  width: calc(100% - 320px); /* 320px NodePropertiesPanel */
  height: 100%;
  transition: width 0.3s ease;
}

.reactflow-wrapper.panel-collapsed {
  width: calc(100% - 48px); /* 48px para el panel colapsado */
}

.react-flow {
  background: #1a1e24;
}

.flow-designer-canvas {
  background-color: #1e2025;
  background-image: radial-gradient(circle, rgba(255,255,255,0.07) 1px, transparent 1px);
  background-size: 24px 24px;
  background-position: 0 0;
}

.react-flow-background {
  opacity: 0.5;
}

.react-flow__node {
  background: #1a1e24;
  border: 2px solid #444;
  border-radius: 8px;
  color: #ffffff;
}

.react-flow__node.selected {
  border-color: #e14d43;
}

.react-flow__handle {
  background: #e14d43;
  width: 15px;
  height: 15px;
  
}

.react-flow__edge {
  stroke: #e14d43;
  stroke-width: 2.5;
  stroke-dasharray: 5, 3;
  animation: flowEdgeAnimation 15s linear infinite;
}

.react-flow__edge.selected {
  stroke: #ff6b5a;
  stroke-width: 2;
  stroke-dasharray: none;
}

@keyframes flowEdgeAnimation {
  to {
    stroke-dashoffset: -500;
  }
}

.react-flow__controls {
  background: rgba(26, 30, 36, 0.9);
  border: 1px solid #333;
}

.react-flow__controls button {
  background: #2a2f36;
  border: 1px solid #444;
  color: #ffffff;
}

.react-flow__controls button:hover {
  background: #333844;
  border-color: #e14d43;
}

/* Estilos del MiniMap ajustados como en el ejemplo de Vue */
.react-flow__minimap {
  box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.25);
  bottom: 24px;
  right: 24px;
  border: 1px solid #555;
  border-radius: 10px;
  z-index: 5 !important;
  padding: 6px 6px 2px 6px;
  background: rgba(35, 39, 46, 0.92) !important;
  pointer-events: auto;
  transition: right 0.22s cubic-bezier(0.4, 1.3, 0.6, 1);
}

.react-flow__minimap-mask {
  fill: rgba(0, 0, 0, 0.2);
}

.react-flow__minimap-node {
  fill: #ffffff;
  stroke: #333333;
  stroke-width: 3px;
  opacity: 1 !important;
  visibility: visible !important;
  filter: drop-shadow(0 0 3px rgba(0, 0, 0, 0.5));
}

/* Estilos uniformes para todos los nodos en el MiniMap */
.react-flow__minimap-node {
  fill: #ffffff !important;
  stroke: #333333 !important;
  opacity: 1 !important;
  visibility: visible !important;
}

/* Solo mantenemos la transformación para los nodos de tipo condición para preservar la forma de diamante */
.react-flow__minimap-node[data-type="condition"],
.react-flow__minimap-node[data-type="if"] {
  /* Transformar para que aparezca como diamante en el MiniMap */
  transform: rotate(45deg) scale(1.2);
  transform-origin: center;
}

/* Estilo específico para el canvas principal */
.flow-designer-canvas .react-flow__node {
  min-height: 40px;
}

/* Estilos para mejorar la visibilidad de los nodos en el MiniMap */
.react-flow__minimap .react-flow__minimap-node {
  stroke-width: 3px !important;
  filter: drop-shadow(0 0 4px rgba(0,0,0,0.7));
  visibility: visible !important;
  opacity: 1 !important;
}

/* Asegurar que el minimap tiene un tamaño y posición adecuados cuando el panel está colapsado o expandido */
.panel-collapsed + .react-flow .react-flow__minimap {
  right: 60px;
}

.react-flow .react-flow__minimap {
  /* Asegurar que siempre esté visible */
  z-index: 5 !important;
  opacity: 1 !important;
  visibility: visible !important;
}
